사용자 A가 작성한 파일입니다.

*** GIT ***
: 우리가 파일을 저장하게 되면 작업하고 저장했던 그 어떤 시점이든 되돌아 갈 수 있다.
	(백업효과도 존재하게 되는 것)


1. 계정 정보 등록
	$ git config --global user.name "miyoung-park"
	$ git config --global user.email "qkraldud1529@gmail.com"

2. git이 관리하도록 폴더 등록(해당 폴더로 이동해야함)
	$ git init

3. git master -> main으로 변경
	$ git branch -m main

3-2. git master -> main으로 디폴트값도 변경
	$ git config --global init.defaultBranch main

4. git 상태 확인
	$ git status

5. git ignore 파일 생성
	$ vim .gitignore
	-> i누르고 *.DS_Store 추가후 :wq 닫기 !

6. 파일을 생성하고 add, commit 해보기
	$ git add : 변경이 있었던 파일을 staging area에 추가
		(git add gittest.txt)
	$ git commit : 변경 내용을 기록
		(git commit -m "[A]처음으로 git commit 한 날"
	$ git log : log 확인 

7. 파일을 수정하고 add, commit 해보기
	$ git add . : 수정내역이 있는 모든 파일을 staging area에 추가
	$ git commit : commit 메시지를 자세히 적어야 한다면 -m 옵션을 제거하고 commit 진행
		      text 에디터가 나오면 i를 눌러서 입력모드로 전환하고 메세지를 구체적으로 작성.
		      작성이 끝나면 <esc> + :wq 저장하고 나가기 를 입력해 commit 완료

8. Commit 아이디 짧게 확인하기 
	$ git log --oneline

9. git reset
	$ git reset --soft <commit id> : 내역을 되돌리고 commit을 취소(staging은 되어있는 상태)
	$ git reset --mixed <commit id>(기본): 내역을 되돌리고 staging도 취소
	$ git reset --hard <commit id> : 해당 commit 지점으로 되돌린다.
				      reset을 하면 내역을 되돌리기 때문에 , log 명령어로 commit id를 볼 수 없다.
	$ git reflog : 모든 내역을 확인하는 reflog 사용해서 모든 commit id 확인 가능

